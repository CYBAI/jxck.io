# to find out the configuration commands, run: h2o --help

pid-file: ../pid/h2o.pid
error-log: ../logs/error_log
access-log: &logger
  path: "| rotatelogs ../logs/access_log.%Y%m%d 86400"
  # was "%{Save-Data}i\"\t\"%{x-http2-push}o\""
  #format: DateTimeMilli RemoteIP Protocol Status Method Host PathQuery UA Referer ResTime {Headers}
  format: "%{%Y/%m/%d %H:%M:%S}t.%{msec_frac}t\t%h\t%H\t%s\t%m\t%V\t%U%q\t\"%{User-agent}i\"\t\"%{Referer}i\"\t%{response-time}x\t{\"save-data\":\"%{Save-Data}i\",\"dpr\":\"%{DPR}i\",\"content-dpr\":\"%{Content-DPR}i\",\"width\":\"%{Width}i\",\"viewport-width\":\"%{Viewport-Width}i\"}"

error-doc:
  - status: 404
    url: /assets/img/404.svg
  - status: 500
    url: /assets/img/500.svg
  - status: 501
    url: /assets/img/501.svg

file.mime.addtypes:
  "text/plain; charset=utf-8": ".txt"
  "text/plain; charset=utf-8": ".md"
  "application/xml; charset=utf-8": ".xml"
  "text/javascript": ".mjs"


# Proxy List
# https://ws.jxck.io         => http://127.0.0.1:6000
# https://rails.jxck.io      => http://127.0.0.1:7000
# https://report-uri.jxck.io => http://127.0.0.1:8000

# globa setting
file.send-compressed: ON
header.unset: "Last-Modified"

hosts:
  "jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect:
          status: 301
          url: https://jxck.io:443/
  "jxck.io:443":
    # CORS
    header.add: "Access-Control-Allow-Methods: GET, PUT, POST, DELETE, HEAD, OPTIONS"
    header.add: "Access-Control-Allow-Origin: *"
    header.add: "Access-Control-Allow-Credentials: true"
    header.add: "Access-Control-Allow-Headres: Accept, Accept-Encoding, Accept-Language, Cookie, Referer, User-Agent"

    # CSP
    header.add: "Strict-Transport-Security: max-age=31536000"
    header.add: "Content-Security-Policy-Report-Only: default-src 'self' https://*.jxck.io https://www.google-analytics.com; report-uri https://report-uri.jxck.io"
    header.add: "Public-Key-Pins-Report-Only: pin-sha256=\"7JT7NhX2St/VBBkRi4BO427M7ytLy7p3CRYPtHpSm7c=\"; pin-sha256=\"+WpRHNpAId2FIOvVgwmS3HsG+eJtERKC4/qM1tQaeRk=\"; report-uri=\"https://report-uri.jxck.io\""

    # Cache
    header.add: "Cache-Control: max-age=1, stale-while-revalidate=600, stale-if-error=864000"

    # Client Hints
    header.add: "Accept-CH: DPR, Content-DPR, Width, Viewport-Width, Save-Data"
    header.add: "Accept-CH-Lifetime: 86400"
    header.add: "Vary: DPR, Content-DPR, Width, Viewport-Width, Save-Data"

    listen: &https
      port: 443
      ssl:
        key-file: /etc/letsencrypt/live/jxck.io/privkey.pem
        certificate-file: /etc/letsencrypt/live/jxck.io/fullchain.pem
        minimum-version: TLSv1.2
        cipher-suite: "AESGCM:HIGH:!3DES:!RSA:!aNULL:!eNULL:!MD5"
        cipher-preference: server
    paths:
      "/":
        mruby.handler-file: .mruby.handler/favicon.rb
        mruby.handler-file: .mruby.handler/robots.rb
        file.dir: ./www.jxck.io
      "/logo":
        redirect:
          status: 301
          url: https://logo.jxck.io:443/jxck.png
      "/humans.txt":
        header.unset: "Content-Security-Policy-Report-Only"
        file.file: ./www.jxck.io/humans.txt
      "/assets/font":
        file.dir: ./www.jxck.io/assets/font
        header.set: "Cache-Control: max-age=31536000, immutable"
  "www.jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect:
          status: 301
          url: https://jxck.io:443/
  "www.jxck.io:443":
    listen:
      <<: *https
    paths:
      "/":
        redirect:
          status: 301
          url: https://jxck.io:443/
  "blog.jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect:
          status: 301
          url: https://blog.jxck.io:443/
  "blog.jxck.io:443":
    header.add: "Public-Key-Pins-Report-Only: pin-sha256=\"7JT7NhX2St/VBBkRi4BO427M7ytLy7p3CRYPtHpSm7c=\"; pin-sha256=\"+WpRHNpAId2FIOvVgwmS3HsG+eJtERKC4/qM1tQaeRk=\"; report-uri=\"https://report-uri.jxck.io\""
    header.add: "Strict-Transport-Security: max-age=31536000"
    header.add: "Cache-Control: max-age=1, stale-while-revalidate=600, stale-if-error=864000"
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/google9ea6e3c69af302c2.html":
        file.file: ./www.jxck.io/assets/file/google9ea6e3c69af302c2.html
      "/feeds":
        file.dir: ./blog.jxck.io/feeds
      "/assets/js/sw.js":
        header.add: "Service-Worker-Allowed: /"
        file.file: ./www.jxck.io/assets/js/sw.js
      "/assets/img/jxck.png":
        header.add: "Cache-Control: max-age=600, immutable"
        file.file: ./www.jxck.io/assets/img/jxck.png
      "/assets/font":
        header.set: "Cache-Control: max-age=31536000, immutable"
        file.dir: ./www.jxck.io/assets/font
      "/":
        mruby.handler-file: .mruby.handler/favicon.rb
        mruby.handler-file: .mruby.handler/robots.rb
        mruby.handler-file: .mruby.handler/index.rb
        mruby.handler-file: .mruby.handler/csp.rb
        file.dir: ./blog.jxck.io
  "slide.jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect:
          status: 301
          url: https://slide.jxck.io:443/
  "slide.jxck.io:443":
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        header.add: "Strict-Transport-Security: max-age=31536000"
        mruby.handler-file: .mruby.handler/favicon.rb
        mruby.handler-file: .mruby.handler/robots.rb
        file.mime.setdefaulttype: "text/html"
        file.dir: ./slide.jxck.io
  "labs.jxck.io:80":
    access-log:
      path: ./labs.jxck.io/access.log
      format: "%{%Y/%m/%d %H:%M:%S}t.%{msec_frac}t\t%h\t%H\t%s\t%m\t%V\t%U%q\t\"%{User-agent}i\"\t\"%{Referer}i\"\t%{response-time}x\t%{HEADERS}e"
    file.etag: OFF
    listen:
      port: 80
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        mruby.handler-file: .mruby.handler/logger.rb
        mruby.handler-file: .mruby.handler/favicon.rb
        mruby.handler-file: .mruby.handler/robots.rb
        file.dir: ./labs.jxck.io
        header.add: "Access-Control-Allow-Methods: GET, PUT, POST, DELETE, HEAD, OPTIONS"
        header.add: "Access-Control-Allow-Origin: *"
        header.add: "Access-Control-Allow-Credentials: true"
        header.add: "Access-Control-Allow-Headres: Accept, Accept-Encoding, Accept-Language, Cookie, Referer, User-Agent"
  "labs.jxck.io:443":
    access-log:
      <<: *logger
      path: ./labs.jxck.io/access.log
    file.etag: OFF
    http2-casper: ON
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        mruby.handler-file: .mruby.handler/favicon.rb
        mruby.handler-file: .mruby.handler/robots.rb
        file.dir: ./labs.jxck.io
        header.add: "Access-Control-Allow-Methods: GET, PUT, POST, DELETE, HEAD, OPTIONS"
        header.add: "Access-Control-Allow-Origin: *"
        header.add: "Access-Control-Allow-Credentials: true"
        header.add: "Access-Control-Allow-Headres: Accept, Accept-Encoding, Accept-Language, Cookie, Referer, User-Agent"
      "/mixed":
        mruby.handler: |
          Proc.new do |env|
            headers = {}
            case env["QUERY_STRING"]
            when "upgrade-insecure-request"
              headers["Content-Security-Policy"] = "Upgrade-Insecure-Requests"
            when "block-all-mixed-content"
              headers["Content-Security-Policy"] = "Block-All-Mixed-Content; report-uri https://report-uri.jxck.io;"
            end
            [399, headers, []]
          end
        file.dir: ./labs.jxck.io/mixed
      "/service-worker/link-rel-service-worker":
        mruby.handler: |
          Proc.new do |env|
            if /\/random\z/.match(env["PATH_INFO"])
              headers = {
                "Content-Type" => "text/plain; charset=utf-8",
                "Link" => "</service-worker/link-rel-service-worker/random.js>; rel=\"serviceworker\"",
                "Origin-Trial" => "Ai32KiE0NsOIRPR/NxvUwEpcM4hYyo6RPRvkG8liNEIXP4DW6furrliZkqCqZh/ug83oAcdctA12PEh3ymNUZg0AAABneyJvcmlnaW4iOiAiaHR0cHM6Ly9qeGNrLmlvOjQ0MyIsICJpc1N1YmRvbWFpbiI6IHRydWUsICJmZWF0dXJlIjogIkZvcmVpZ25GZXRjaCIsICJleHBpcnkiOiAxNDg0NTgyMTg2fQ=="
              }
              body = [
                rand(100)
              ]
              [200, headers, body]
            else
              [399, {}, []]
            end
          end
        file.dir: ./labs.jxck.io/service-worker/link-rel-service-worker
      "/service-worker/foreign-fetch":
        header.set: "Origin-Trial: Ai32KiE0NsOIRPR/NxvUwEpcM4hYyo6RPRvkG8liNEIXP4DW6furrliZkqCqZh/ug83oAcdctA12PEh3ymNUZg0AAABneyJvcmlnaW4iOiAiaHR0cHM6Ly9qeGNrLmlvOjQ0MyIsICJpc1N1YmRvbWFpbiI6IHRydWUsICJmZWF0dXJlIjogIkZvcmVpZ25GZXRjaCIsICJleHBpcnkiOiAxNDg0NTgyMTg2fQ=="
        file.dir: ./labs.jxck.io/service-worker/foreign-fetch
      "/stale-while-revalidate/random":
        header.add: "Cache-Control: max-age=5, stale-while-revalidate=10, stale-if-error=15"
        mruby.handler-file: .mruby.handler/random.rb
        file.dir: ./labs.jxck.io/stale-while-revalidate
      "/content-security-policy":
        header.add: "Content-Security-Policy: default-src 'self'; report-uri https://report-uri.jxck.io"
        file.dir: ./labs.jxck.io/content-security-policy
      "/public-key-pinning":
        header.add: "Public-Key-Pins: max-age=3600; pin-sha256=\"7JT7NhX2St/VBBkRi4BO427M7ytLy7p3CRYPtHpSm7c=\"; pin-sha256=\"+WpRHNpAId2FIOvVgwmS3HsG+eJtERKC4/qM1tQaeRk=\"; report-uri=\"https://report-uri.jxck.io\""
        file.dir: ./labs.jxck.io/public-key-pinning
      "/cache-control-immutable/large.immutable.bmp":
        header.add: "Cache-Control: max-age=60, immutable"
        file.file: ./labs.jxck.io/cache-control-immutable/large.immutable.bmp
      "/http2/push":
        mruby.handler-file: .mruby.handler/push.rb
        file.dir: ./labs.jxck.io/http2/push
      "/http/client-hints.html":
        header.add: "Accept-CH: DPR, Content-DPR, Width, Viewport-Width, Save-Data"
        header.add: "Accept-CH-Lifetime: 86400"
        header.add: "Vary: DPR, Content-DPR, Width, Viewport-Width, Save-Data"
        file.file: ./labs.jxck.io/client-hints/basic.html
  "api.jxck.io:443":
    access-log:
      <<: *logger
      path: ../logs/api.jxck.io.log
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/random/worker.js":
        header.set: "Origin-Trial: Ai32KiE0NsOIRPR/NxvUwEpcM4hYyo6RPRvkG8liNEIXP4DW6furrliZkqCqZh/ug83oAcdctA12PEh3ymNUZg0AAABneyJvcmlnaW4iOiAiaHR0cHM6Ly9qeGNrLmlvOjQ0MyIsICJpc1N1YmRvbWFpbiI6IHRydWUsICJmZWF0dXJlIjogIkZvcmVpZ25GZXRjaCIsICJleHBpcnkiOiAxNDg0NTgyMTg2fQ=="
        file.file: ./api.jxck.io/random/worker.js
      "/random/number":
        mruby.handler: |
          Proc.new do |env|
            headers = {
              "Content-Type"                 => "text/plain; charset=utf-8",
              "Origin-Trial"                 => "Ai32KiE0NsOIRPR/NxvUwEpcM4hYyo6RPRvkG8liNEIXP4DW6furrliZkqCqZh/ug83oAcdctA12PEh3ymNUZg0AAABneyJvcmlnaW4iOiAiaHR0cHM6Ly9qeGNrLmlvOjQ0MyIsICJpc1N1YmRvbWFpbiI6IHRydWUsICJmZWF0dXJlIjogIkZvcmVpZ25GZXRjaCIsICJleHBpcnkiOiAxNDg0NTgyMTg2fQ==",
              "Link"                         => "</random/worker.js>; rel=\"serviceworker\"",
              "Access-Control-Allow-Methods" => "GET, HEAD, OPTIONS",
              "Access-Control-Allow-Origin"  => "*"
            }
            body = [
              rand(100)
            ]
            [200, headers, body]
          end
  "spec.jxck.io:443":
    access-log:
      <<: *logger
      path: ../logs/spec.jxck.io.log
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        file.dirlisting: ON
        file.dir: ../spec.jxck.io
  "files.jxck.io:443":
    access-log:
      <<: *logger
      path: ../logs/files.jxck.io.log
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        mruby.handler-file: .mruby.handler/auth.rb
        file.dirlisting: ON
        file.dir: ../files.jxck.io
  "admin.jxck.io:443":
    access-log:
      <<: *logger
      path: ../logs/admin.jxck.io.log
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        mruby.handler-file: .mruby.handler/auth.rb
        file.dir: ./admin.jxck.io
  "ws.jxck.io:443":
    access-log:
      <<: *logger
      path: ../logs/ws.jxck.io.log
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        proxy.websocket: ON
        proxy.reverse.url: "http://127.0.0.1:6000/"
  "rails.jxck.io:80":
    access-log:
      <<: *logger
      path: ../logs/rails.jxck.io.log
    listen:
      port: 80
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        proxy.reverse.url: "http://127.0.0.1:7000/"
  "report-uri.jxck.io:443":
    access-log:
      <<: *logger
      path: ../logs/report-uri.jxck.io.log
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        proxy.reverse.url: "http://127.0.0.1:8000/"
  "sfu.jxck.io:443":
    access-log:
      <<: *logger
      path: ../logs/sfu.jxck.io.log
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/":
        proxy.websocket: ON
        proxy.reverse.url: "http://127.0.0.1:9000/"
  "logo.jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect:
          status: 301
          url: https://logo.jxck.io:443/
  "logo.jxck.io:443":
    listen:
      <<: *https
    paths:
      "/.well-known":
        file.dir: ./www.jxck.io/.well-known
      "/jxck.png":
        file.file: ./www.jxck.io/assets/img/jxck.png
      "/jxck.webp":
        file.file: ./www.jxck.io/assets/img/jxck.webp
      "/jxck.svg":
        file.file: ./www.jxck.io/assets/img/jxck.svg


  ### mozaic.fm
  "mozaic.fm:80":
    access-log:
      <<: *logger
      path: ../logs/mozaic.fm.log
    listen:
      port: 80
    paths:
      "/.well-known":
        file.dir: ./mozaic.fm/.well-known
      "/rss":
        redirect:
          status: 301
          url: http://feed.mozaic.fm:443/
      "/":
        redirect:
          status: 301
          url: https://mozaic.fm:443/
  "mozaic.fm:443":
    access-log:
      <<: *logger
      path: ../logs/mozaic.fm.log
    listen: &mozaic-https
      port: 443
      ssl:
        certificate-file: /etc/letsencrypt/live/mozaic.fm/fullchain.pem
        key-file: /etc/letsencrypt/live/mozaic.fm/privkey.pem
        cipher-suite: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
        cipher-preference: server
    paths:
      "/.well-known":
        file.dir: ./mozaic.fm/.well-known
      "/post":
        mruby.handler-file: .mruby.handler/mozaic.rb
      "/rss":
        redirect:
          status: 301
          url: https://feed.mozaic.fm:443/
      "/":
        mruby.handler-file: .mruby.handler/robots.rb
        file.dir: ./mozaic.fm
  "files.mozaic.fm:80":
    access-log:
      <<: *logger
      path: ../logs/files.mozaic.fm.log
    listen:
      port: 80
    paths:
      "/.well-known":
        file.dir: ./mozaic.fm/.well-known
      "/":
        mruby.handler-file: .mruby.handler/mozaic-file.rb
        mruby.handler-file: .mruby.handler/robots.rb
        file.dir: ../files.mozaic.fm
  "files.mozaic.fm:443":
    access-log:
      <<: *logger
      path: ../logs/files.mozaic.fm.log
    listen:
      <<: *mozaic-https
    paths:
      "/.well-known":
        file.dir: ./mozaic.fm/.well-known
      "/":
        mruby.handler-file: .mruby.handler/robots.rb
        file.dir: ../files.mozaic.fm
  "feed.mozaic.fm:80":
    access-log:
      <<: *logger
      path: ../logs/feed.mozaic.fm.log
    listen:
      port: 80
    paths:
      "/.well-known":
        file.dir: ./mozaic.fm/.well-known
      "/":
        header.set: "Content-Type: application/rss+xml; charset=utf-8"
        header.add: "Access-Control-Allow-Methods: GET, HEAD, OPTIONS"
        header.add: "Access-Control-Allow-Origin: *"
        file.file: ./feed.mozaic.fm/index.xml
  "feed.mozaic.fm:443":
    access-log:
      <<: *logger
      path: ../logs/feed.mozaic.fm.log
    listen:
      <<: *mozaic-https
    paths:
      "/.well-known":
        file.dir: ./mozaic.fm/.well-known
      "/":
        header.set: "Content-Type: application/rss+xml; charset=utf-8"
        header.add: "Access-Control-Allow-Methods: GET, HEAD, OPTIONS"
        header.add: "Access-Control-Allow-Origin: *"
        file.file: ./feed.mozaic.fm/index.xml
