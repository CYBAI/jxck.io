# to find out the configuration commands, run: h2o --help

access-log: /dev/stdout
error-log: /dev/stdout
hosts:
  "jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect: https://jxck.io:443/
  "jxck.io:443":
    listen:
      port: 443
      ssl:
        key-file: /Users/jxck/dotfiles/keys/key.pem
        certificate-file: /Users/jxck/dotfiles/keys/cert.pem
    paths:
      "/":
        mruby.handler: |
          Proc.new do |env|
            if env["PATH_INFO"] == "/favicon.ico"
              [200, {"content-type" => "image/x-icon"}, File::open("./www.jxck.io/favicon.ico")]
            else
              [399, {}, []]
            end
          end
        file.dir: ./www.jxck.io
  "labs.jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect: https://labs.jxck.io:443/
  "labs.jxck.io:443":
    listen:
      port: 443
      ssl:
        key-file: /Users/jxck/dotfiles/keys/key.pem
        certificate-file: /Users/jxck/dotfiles/keys/cert.pem
    paths:
      "/":
        mruby.handler: |
          Proc.new do |env|
            if env["PATH_INFO"] == "/favicon.ico"
              [200, {"content-type" => "image/x-icon"}, File::open("./www.jxck.io/favicon.ico")]
            else
              [399, {}, []]
            end
          end
        file.dir: ./labs.jxck.io
  "blog.jxck.io:80":
    listen:
      port: 80
    paths:
      "/":
        redirect: https://blog.jxck.io:443/
  "blog.jxck.io:443":
    listen:
      port: 443
      ssl:
        key-file: /Users/jxck/dotfiles/keys/key.pem
        certificate-file: /Users/jxck/dotfiles/keys/cert.pem
    paths:
      "/":
        mruby.handler: |
          Proc.new do |env|
            if env["PATH_INFO"] == "/favicon.ico"
              [200, {"content-type" => "image/x-icon"}, File::open("./www.jxck.io/favicon.ico")]
            else
              [399, {}, []]
            end
          end
        file.dir: ./blog.jxck.io
